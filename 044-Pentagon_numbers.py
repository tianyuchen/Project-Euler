# -*- coding: utf-8 -*-
'''
Pentagonal numbers are generated by the formula, Pn=n(3n−1)/2. The first ten
pentagonal numbers are:

1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...

It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their difference,
70 − 22 = 48, is not pentagonal.

Find the pair of pentagonal numbers, Pj and Pk, for which their sum and
difference are pentagonal and D = |Pk − Pj| is minimised; what is the value of D?
'''


def pentagonal_numbers():
    # set can't contain duplicates, is unordered
    pentagonal_nums = set()
    n = 1

    while True:
        n += 1
        # their sum is pentagonal
        total = (3 * n ** 2 - n) / 2

        for Pj in pentagonal_nums:
            # sum = Pk + Pj => Pk = sum - Pj
            # D = (sum - Pj) - Pj = sum - 2 * Pj
            if total - Pj in pentagonal_nums and sum - 2 * Pj in pentagonal_nums:
                return total - 2 * Pj
        pentagonal_nums.add(total)


print(pentagonal_numbers())
